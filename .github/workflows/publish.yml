name: Publish Package

# ----------------------------------------------------------------------------------
# 🚀 Publish Package Workflow (Main Branch)
#
# This workflow builds and publishes the package to the public npm registry
# whenever a commit is pushed to the `main` branch.
# It can also be called as a reusable workflow from other repositories.
#
# It performs the following steps:
# 1. Authenticates with GitHub and npm
# 2. Installs dependencies and caches pnpm store
# 3. Builds the project
# 4. Runs the release script (typically bumps version via semantic-release or similar)
# 5. Pushes version bump commit and Git tags back to origin
# 6. Publishes the built package to npm with `--access public`
#
# 🔐 Requirements:
# - `NPM_PRIVATE_PACKAGE_TOKEN` secret must be set in repository secrets.
# - Package must be configured correctly in `package.json` (with `name`, `version`, etc.)
#
# 📝 Trigger:
# - Only runs on `push` to the `main` branch.
# - Can be called as reusable workflow from other repositories.
# ----------------------------------------------------------------------------------

on:
  push:
    branches: [main]
  
  # Allow being called as reusable workflow from other repos
  workflow_call:
    inputs:
      node_version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '22.4.x'
      pnpm_version:
        description: 'pnpm version to use'
        required: false
        type: string
        default: '8'
      registry_url:
        description: 'npm registry URL'
        required: false
        type: string
        default: 'https://registry.npmjs.org'
      package_access:
        description: 'Package access level (public/restricted)'
        required: false
        type: string
        default: 'public'
      skip_git_checks:
        description: 'Skip git checks during publish'
        required: false
        type: boolean
        default: true
    secrets:
      NPM_PRIVATE_PACKAGE_TOKEN:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest

    # 🔐 Permissions required for pushing code and publishing packages
    permissions:
      contents: write     # To push commits/tags
      packages: write     # To publish to GitHub Packages (optional here, but good practice)

    steps:
      # 🧾 Checkout the repository
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN || github.token }}

      # 📦 Setup pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ inputs.pnpm_version || '8' }}

      # 📦 Setup Node.js and registry config
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version || '22.4.x' }}
          registry-url: ${{ inputs.registry_url || 'https://registry.npmjs.org' }}
          cache: 'pnpm'

      # 🔐 Authenticate with npm registry using secret token
      - name: Authenticate with npm
        run: echo "//${{ inputs.registry_url || 'registry.npmjs.org' }}/:_authToken=${{ secrets.NPM_PRIVATE_PACKAGE_TOKEN }}" > ~/.npmrc

      # 💾 Restore pnpm cache to speed up install
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      # 🔧 Configure Git identity for pushing version bump commits
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 📥 Install dependencies
      - name: Install dependencies
        run: pnpm install

      # 🛠️ Build the project
      - name: Build project
        run: pnpm build

      # 🏷️ Run release script (e.g., semantic-release, standard-version, etc.)
      - name: Run release script
        run: pnpm run release

      # 🔁 Push version bump commit and Git tags back to main
      - name: Push version bump commit and tags
        run: |
          git push origin main
          git push origin --tags

      # 🚀 Publish the package to npm (public access, skip Git checks)
      - name: Publish to npm
        run: |
          if [ "${{ inputs.skip_git_checks }}" = "true" ]; then
            pnpm publish --access ${{ inputs.package_access || 'public' }} --no-git-checks
          else
            pnpm publish --access ${{ inputs.package_access || 'public' }}
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PRIVATE_PACKAGE_TOKEN }}